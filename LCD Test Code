#include <stdlib.h>
#include <stdio.h>
#include <time.h>
#include <math.h>
#include <p89lpc9351.h>

#define XTAL 7373000L
#define BAUD 9600L

// Make sure these definitions match your wiring
#define LCD_RS P2_7 //pin 4
#define LCD_RW P2_6 //pin 5
#define LCD_E  P2_5 //pin 6
#define LCD_D7 P1_4 //pin 14
#define LCD_D6 P1_6 //pin 13
#define LCD_D5 P1_7 //pin 12
#define LCD_D4 P2_0 //pin 11
#define LCD_D3 P2_1 //pin 10
#define LCD_D2 P2_2 //pin 9
#define LCD_D1 P2_3 //pin 8
#define LCD_D0 P2_4 //pin 7
#define CHARS_PER_LINE 16

void InitPorts(void)
{
	P0M1=0;
	P0M2=0;
	P1M1=0;
	P1M2=0;
	P2M1=0;
	P2M2=0;
	P3M1=0;
	P3M2=0;
}

void Wait50us (void)
{
	_asm
    mov R0, #82
L0: djnz R0, L0 ; 2 machine cycles-> 2*0.27126us*92=50us
    _endasm;
}

void waitms (unsigned int ms)
{
	unsigned int j;
	unsigned char k;
	for(j=0; j<ms; j++)
		for (k=0; k<20; k++) Wait50us();
}

void LCD_pulse (void)
{
	LCD_E=1;
	Wait50us();
	LCD_E=0;
}

void LCD_byte (unsigned char x)
{
	// The accumulator in the C8051Fxxx is bit addressable!
	ACC=x;
	LCD_D7=ACC_7;
	LCD_D6=ACC_6;
	LCD_D5=ACC_5;
	LCD_D4=ACC_4;
	LCD_D3=ACC_3;
	LCD_D2=ACC_2;
	LCD_D1=ACC_1;
	LCD_D0=ACC_0;
	LCD_pulse();
}

void WriteData (unsigned char x)
{
	LCD_RS=1;
	LCD_byte(x);
	waitms(2);
}

void WriteCommand (unsigned char x)
{
	LCD_RS=0;
	LCD_byte(x);
	waitms(5);
}

void LCD_8BIT (void)
{
	LCD_E=0;  // Resting state of LCD's enable is zero
	LCD_RW=0; // We are only writing to the LCD in this program
	waitms(20);
	// First make sure the LCD is in 8-bit mode
	WriteCommand(0x33);
	WriteCommand(0x33);
	WriteCommand(0x33); // Stay in 8-bit mode

	// Configure the LCD
	WriteCommand(0x38);
	WriteCommand(0x0c);
	WriteCommand(0x01); // Clear screen command (takes some time)
	waitms(20); // Wait for clear screen command to finsih.
}

void LCDprint(char * string, unsigned char line, bit clear)
{
	unsigned char j;

	WriteCommand(line==2?0xc0:0x80);
	waitms(5);
	for(j=0; string[j]!=0; j++)	WriteData(string[j]);// Write the message
	if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
}

void main (void)
{	
	int i;

	InitPorts();
	LCD_8BIT();
	clock_t tic, toc, total_t;
   	//starting to count
   	tic = clock();
   	
   	for( i = 0; i < 100000000 ;i++)
   	{}
   	
   	toc = clock();
   	total_t = double(toc - tic)/ CLOCKS_PER_SEC;
	LCDprint("Hi ", 1, 1);
	LCDprint("You're Awesome ", 2, 1);
	
	return(0);
}
